/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
// Simple RDDL domain                                                          //
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////


domain button-mdp {
    requirements {
        reward-deterministic,
        cpf-deterministic
    };

    types {
        button   : object;
    };

    pvariables {
    //////////////////////////////// States /////////////////////////////////
    // Passenger reached goal variable
        button-on(button)                : { state-fluent, bool, default=false };

    //////////////////////////////// Actions ////////////////////////////////
        toggle-button(button)                           : { action-fluent, bool, default = false };


    //////////////////////////////// Non-Fluents ////////////////////////////////
        grandma(button)                       : { non-fluent, bool, default = false };
    };
    cdfs {
    // Pickup and Dropoff Transition function
       button-on'(?b) =
            if (toggle-button(?b))
                then ~button-on(?b)
            else button-on(?b);
          
    };

    reward =
           sum_{ ?b : button } [ button-on(?b) ];

   // action-preconditions {
   
   // };
}
non-fluents button-mdp_single {
    domain = button-mdp;

    objects {
        button               : { b0,b1,b2 };
    };

    non-fluents {
       
        grandma(b0);
        grandma(b1);
        grandma(b2);
    };
}

instance button-mdp_inst_mdp_01 {
    domain = button-mdp;
    non-fluents = button-mdp_single;

    init-state {
        button-on(b0);
        ~button-on(b1);
        ~button-on(b2);
    };

    horizon = 20;

    discount = 1.0;
}
