/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
// RDDL MDP version of the Taxi Domain described in original                   //
// OO-MDP paper by Diuk et al. (2008)                                          //
// IMPORTANT : This implementation is only intended to work when there is only //
// a single taxi. Don't instantiate this with more than one taxi.              //
// Also, don't instantiate with a passenger in the taxi, but having the taxi   //
// and passenger at different locations.                                       //
// By: Nishanth J. Kumar (nishanth_kumar@brown.edu) and Michael Fishman        //
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////

instance taxi-oo_mdp_inst_mdp__04 {
    domain = taxi-oo_mdp;

    objects {
        xpos               : { x00, x01, x02, x03, x04, x05 };
        ypos               : { y00, y01, y02, y03, y04, y05 };
        taxi               : { t0 };
        passenger          : { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19,
                               p20, p21, p22, p23, p24, p25, p26, p27, p28 };
    };

    non-fluents {
        // ADJACENCY
        ADJACENT_LEFT(x00, x01);
        ADJACENT_LEFT(x01, x02);
        ADJACENT_LEFT(x02, x03);
        ADJACENT_LEFT(x03, x04);
        ADJACENT_LEFT(x04, x05);
        ADJACENT_RIGHT(x01, x00);
        ADJACENT_RIGHT(x02, x01);
        ADJACENT_RIGHT(x03, x02);
        ADJACENT_RIGHT(x04, x03);
        ADJACENT_RIGHT(x05, x04);
        ADJACENT_DOWN(y00, y01);
        ADJACENT_DOWN(y01, y02);
        ADJACENT_DOWN(y02, y03);
        ADJACENT_DOWN(y03, y04);
        ADJACENT_DOWN(y04, y05);
        ADJACENT_UP(y01, y00);
        ADJACENT_UP(y02, y01);
        ADJACENT_UP(y03, y02);
        ADJACENT_UP(y04, y03);
        ADJACENT_UP(y05, y04);

        // WALLS
//        WALL_LOC(x00, y02);
//        WALL_LOC(x02, y00);
//        WALL_LOC(x02, y01);
//        WALL_LOC(x02, y04);
//        WALL_LOC(x02, y05);
//        WALL_LOC(x04, y01);
//        WALL_LOC(x05, y04);



        // PASSENGERS
        PASSENGER_GOAL_LOC(p0, x05, y05);
        PASSENGER_GOAL_LOC(p1, x01, y02);
        PASSENGER_GOAL_LOC(p2, x01, y01);
        PASSENGER_GOAL_LOC(p3, x01, y01);
        PASSENGER_GOAL_LOC(p4, x00, y01);
        PASSENGER_GOAL_LOC(p5, x00, y02);
        PASSENGER_GOAL_LOC(p6, x00, y00);
        PASSENGER_GOAL_LOC(p7, x00, y01);
        PASSENGER_GOAL_LOC(p8, x02, y01);
        PASSENGER_GOAL_LOC(p9, x02, y01);
        PASSENGER_GOAL_LOC(p10, x02, y01);
        PASSENGER_GOAL_LOC(p11, x05, y01);
        PASSENGER_GOAL_LOC(p12, x02, y05);
        PASSENGER_GOAL_LOC(p13, x02, y01);
        PASSENGER_GOAL_LOC(p14, x04, y01);
        PASSENGER_GOAL_LOC(p15, x03, y01);
        PASSENGER_GOAL_LOC(p16, x01, y01);
        PASSENGER_GOAL_LOC(p17, x02, y05);
        PASSENGER_GOAL_LOC(p18, x02, y04);
        PASSENGER_GOAL_LOC(p19, x02, y03);
        PASSENGER_GOAL_LOC(p20, x02, y02);
        PASSENGER_GOAL_LOC(p21, x04, y03);
        PASSENGER_GOAL_LOC(p22, x04, y02);
        PASSENGER_GOAL_LOC(p23, x04, y04);
        PASSENGER_GOAL_LOC(p24, x03, y05);
        PASSENGER_GOAL_LOC(p25, x03, y03);
        PASSENGER_GOAL_LOC(p26, x02, y05);
        PASSENGER_GOAL_LOC(p27, x01, y04);
        PASSENGER_GOAL_LOC(p28, x05, y02);

        PASSENGERS_YOU_CARE_FOR(p0);

    };

    init-state {
        taxi-at(t0, x00, y00);
        passenger-at-curr(p0, x00, y05);
        passenger-at-curr(p1, x00, y02);
        passenger-at-curr(p2, x00, y00);
        passenger-at-curr(p3, x00, y00);
        passenger-at-curr(p4, x01, y00);
        passenger-at-curr(p5, x01, y01);
        passenger-at-curr(p6, x01, y02);
        passenger-at-curr(p7, x00, y03);
        passenger-at-curr(p8, x01, y03);
        passenger-at-curr(p9, x01, y04);
        passenger-at-curr(p10, x00, y04);
        passenger-at-curr(p11, x01, y05);
        passenger-at-curr(p12, x02, y03);
        passenger-at-curr(p13, x02, y02);
        passenger-at-curr(p14, x03, y00);
        passenger-at-curr(p15, x03, y01);
        passenger-at-curr(p16, x03, y02);
        passenger-at-curr(p17, x03, y03);
        passenger-at-curr(p18, x03, y05);
        passenger-at-curr(p19, x03, y04);
        passenger-at-curr(p20, x05, y00);
        passenger-at-curr(p21, x04, y02);
        passenger-at-curr(p22, x04, y04);
        passenger-at-curr(p23, x04, y00);
        passenger-at-curr(p24, x04, y03);
        passenger-at-curr(p25, x04, y05);
        passenger-at-curr(p26, x05, y03);
        passenger-at-curr(p27, x05, y01);
        passenger-at-curr(p28, x05, y02);
    };

    horizon = 19;

    discount = 1.0;
}
